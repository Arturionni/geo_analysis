'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _events = require('events');

var _openlayers = require('openlayers');

var _openlayers2 = _interopRequireDefault(_openlayers);

var _AppDispatcher = require('../dispatchers/AppDispatcher');

var _AppDispatcher2 = _interopRequireDefault(_AppDispatcher);

var _LayerConstants = require('../constants/LayerConstants');

var _LayerConstants2 = _interopRequireDefault(_LayerConstants);

var _WFSService = require('../services/WFSService');

var _WFSService2 = _interopRequireDefault(_WFSService);

var _RESTService = require('../services/RESTService');

var _RESTService2 = _interopRequireDefault(_RESTService);

var _debounce = require('debounce');

var _debounce2 = _interopRequireDefault(_debounce);

var _FeatureStore = require('../stores/FeatureStore');

var _FeatureStore2 = _interopRequireDefault(_FeatureStore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License").
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and limitations under the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

/* global document */

var config = {
  layers: []
};

var LayerStore = function (_EventEmitter) {
  _inherits(LayerStore, _EventEmitter);

  function LayerStore() {
    _classCallCheck(this, LayerStore);

    var _this = _possibleConstructorReturn(this, (LayerStore.__proto__ || Object.getPrototypeOf(LayerStore)).call(this));

    _this._onError = (0, _debounce2.default)(_this._onError, 1000);
    return _this;
  }

  _createClass(LayerStore, [{
    key: 'bindMap',
    value: function bindMap(map, opt_proxy, opt_requestHeaders) {
      if (!this._proxy && opt_proxy) {
        this._proxy = opt_proxy;
      }
      if (!this._requestHeaders && opt_requestHeaders) {
        this._requestHeaders = opt_requestHeaders;
      }
      if (map !== this._map) {
        this._map = map;
        config.layers = this._map.getLayers().getArray();
        for (var i = 0, ii = config.layers.length; i < ii; ++i) {
          this._bindLayer(config.layers[i]);
        }
        this.emitChange();
        this._map.getLayers().on('add', this._onAdd, this);
        this._map.getLayers().on('remove', this._onRemove, this);
      }
    }
  }, {
    key: '_bindLayer',
    value: function _bindLayer(layer) {
      // TODO should we listen to more generic change event?
      layer.on('change:wfsInfo', this.emitChange, this);
      layer.on('change:styleName', this.emitChange, this);
      layer.on('change:visible', this.emitChange, this);
      if (!(layer instanceof _openlayers2.default.layer.Group)) {
        var source = layer.getSource();
        if (source instanceof _openlayers2.default.source.ImageWMS || source instanceof _openlayers2.default.source.TileWMS || layer.get('isWFST')) {
          if (!layer.get('wfsInfo') || layer.get('wfsInfo') && !layer.get('wfsInfo').featureNS) {
            // QGIS WAB does not know featureNS, but has the rest of the info
            if (layer.get('wfsInfo') && !layer.get('wfsInfo').featureNS) {
              layer.set('url', layer.get('wfsInfo').url);
              layer.set('name', layer.get('wfsInfo').featurePrefix + ':' + layer.get('wfsInfo').featureType);
            }
            this._getWfsInfo(layer);
          }
          if (!layer.get('styleName')) {
            this._getStyleName(layer);
          }
        }
        if (source instanceof _openlayers2.default.source.Tile) {
          source.on('tileloaderror', this._onError, this);
        } else if (source instanceof _openlayers2.default.source.Image) {
          source.on('imageloaderror', this._onError, this);
        }
      } else {
        // change:layers on layer does not seem to work
        this._recurseBind(layer);
      }
    }
  }, {
    key: '_getStyleName',
    value: function _getStyleName(layer) {
      _RESTService2.default.getStyleName(layer, function (styleName) {
        layer.set('styleName', styleName);
      }, function () {}, this._proxy, this._requestHeaders);
    }
  }, {
    key: '_getWfsInfo',
    value: function _getWfsInfo(layer) {
      var source = layer.getSource();
      var url = layer.get('url');
      if (!url) {
        if (source instanceof _openlayers2.default.source.TileWMS) {
          url = source.getUrls()[0];
        } else if (source instanceof _openlayers2.default.source.ImageWMS) {
          url = source.getUrl();
        }
      }
      var name = layer.get('name') ? layer.get('name') : source.getParams().LAYERS;
      var me = this;
      _WFSService2.default.describeFeatureType(url, name, function (wfsInfo) {
        this.set('wfsInfo', wfsInfo);
        _FeatureStore2.default.addLayer(this, false, me._proxy, me._requestHeaders);
      }, function () {
        this.set('isSelectable', false);
        this.set('wfsInfo', undefined);
      }, layer, this._proxy, this._requestHeaders);
    }
  }, {
    key: '_recurseBind',
    value: function _recurseBind(layer) {
      if (layer instanceof _openlayers2.default.layer.Group) {
        layer.getLayers().on('change:length', this.emitChange, this);
        layer.getLayers().forEach(function (child) {
          this._recurseBind(child);
        }, this);
      }
    }
  }, {
    key: '_onError',
    value: function _onError() {
      this.emit('ERROR');
    }
  }, {
    key: '_onAdd',
    value: function _onAdd(evt) {
      this._bindLayer(evt.element);
      this.emitChange();
    }
  }, {
    key: '_onRemove',
    value: function _onRemove(evt) {
      this.emitChange();
    }
  }, {
    key: '_flattenForEach',
    value: function _flattenForEach(layer, layers) {
      if (layer instanceof _openlayers2.default.layer.Group) {
        layer.getLayers().forEach(function (groupLayer) {
          this._flattenForEach(groupLayer, layers);
        }, this);
      } else {
        layers.push(layer);
      }
    }
  }, {
    key: '_forEachLayer',
    value: function _forEachLayer(layer, layers, id) {
      if (layer.get('id') === id) {
        layers.push(layer);
      } else {
        if (layer instanceof _openlayers2.default.layer.Group) {
          layer.getLayers().forEach(function (groupLayer) {
            this._forEachLayer(groupLayer, layers, id);
          }, this);
        }
      }
    }
  }, {
    key: 'findLayer',
    value: function findLayer(id) {
      var layers = [];
      this._forEachLayer(this._map.getLayerGroup(), layers, id);
      if (layers.length === 1) {
        return layers[0];
      } else {
        return undefined;
      }
    }
  }, {
    key: 'getMap',
    value: function getMap() {
      return this._map;
    }
  }, {
    key: 'getState',
    value: function getState() {
      config.flatLayers = [];
      this._flattenForEach(this._map.getLayerGroup(), config.flatLayers);
      return config;
    }
  }, {
    key: 'emitChange',
    value: function emitChange() {
      if (this._silent !== true) {
        this.emit('CHANGE');
      }
    }
  }, {
    key: 'addChangeListener',
    value: function addChangeListener(cb) {
      this.on('CHANGE', cb);
    }
  }, {
    key: 'addErrorListener',
    value: function addErrorListener(cb) {
      this.on('ERROR', cb);
    }
  }, {
    key: 'removeChangeListener',
    value: function removeChangeListener(cb) {
      this.removeListener('CHANGE', cb);
    }
  }, {
    key: 'removeErrorListener',
    value: function removeErrorListener(cb) {
      this.removeListener('ERROR', cb);
    }
  }, {
    key: 'silent',
    value: function silent(_silent) {
      this._silent = _silent;
    }
  }]);

  return LayerStore;
}(_events.EventEmitter);

var _LayerStore = new LayerStore();

exports.default = _LayerStore;


_AppDispatcher2.default.register(function (payload) {
  var action = payload.action;
  var layers = void 0;
  switch (action.type) {
    case _LayerConstants2.default.REMOVE_LAYER:
      if (action.group) {
        layers = action.group.getLayers();
      } else {
        layers = _LayerStore.getMap().getLayers();
      }
      layers.remove(action.layer);
      break;
    case _LayerConstants2.default.MOVE_LAYER:
      if (action.group) {
        layers = action.group.getLayers();
      } else {
        layers = _LayerStore.getMap().getLayers();
      }
      _LayerStore.silent(true);
      layers.remove(action.layer);
      _LayerStore.silent(false);
      layers.insertAt(action.hoverIndex, action.layer);
      break;
    default:
      break;
  }
});