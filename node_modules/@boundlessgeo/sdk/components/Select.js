'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                    * Licensed under the Apache License, Version 2.0 (the "License").
                    * You may not use this file except in compliance with the License.
                    * You may obtain a copy of the License at
                    * http://www.apache.org/licenses/LICENSE-2.0
                    * Unless required by applicable law or agreed to in writing, software
                    * distributed under the License is distributed on an "AS IS" BASIS,
                    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    * See the License for the specific language governing permissions and limitations under the License.
                    */

/* eslint react/prop-types: 0 */


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _openlayers = require('openlayers');

var _openlayers2 = _interopRequireDefault(_openlayers);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _SelectActions = require('../actions/SelectActions');

var _SelectActions2 = _interopRequireDefault(_SelectActions);

var _AppDispatcher = require('../dispatchers/AppDispatcher');

var _AppDispatcher2 = _interopRequireDefault(_AppDispatcher);

var _toolutil = require('../toolutil');

var _toolutil2 = _interopRequireDefault(_toolutil);

var _WFSService = require('../services/WFSService');

var _WFSService2 = _interopRequireDefault(_WFSService);

var _FeatureStore = require('../stores/FeatureStore');

var _FeatureStore2 = _interopRequireDefault(_FeatureStore);

var _IconMenu = require('material-ui/IconMenu');

var _IconMenu2 = _interopRequireDefault(_IconMenu);

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _reactIntl = require('react-intl');

var _getMuiTheme = require('material-ui/styles/getMuiTheme');

var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);

var _Button = require('./Button');

var _Button2 = _interopRequireDefault(_Button);

var _Divider = require('material-ui/Divider');

var _Divider2 = _interopRequireDefault(_Divider);

var _delete = require('material-ui/svg-icons/action/delete');

var _delete2 = _interopRequireDefault(_delete);

var _LayerStore = require('../stores/LayerStore');

var _LayerStore2 = _interopRequireDefault(_LayerStore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var messages = (0, _reactIntl.defineMessages)({
  menubuttontext: {
    'id': 'select.menubuttontext',
    'defaultMessage': 'Select'
  },
  menubuttontitle: {
    'id': 'select.menubuttontitle',
    'defaultMessage': 'Select features by rectangle'
  },
  selectbyrectangletext: {
    'id': 'select.selectbyrectangletext',
    'defaultMessage': 'Select by rectangle'
  },
  clearselectiontext: {
    'id': 'select.clearselectiontext',
    'defaultMessage': 'Clear selection'
  }
});

/**
 * The select tool allows users to select features in multiple layers at a time by drawing a rectangle.
 *
 * ```xml
 * <Select toggleGroup='navigation' map={map}/>
 * ```
 *
 * ![Select](../Select.png)
 */
var Select = (_temp = _class = function (_React$PureComponent) {
  _inherits(Select, _React$PureComponent);

  function Select(props, context) {
    _classCallCheck(this, Select);

    var _this = _possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));

    _LayerStore2.default.bindMap(props.map);
    _this._dispatchToken = _toolutil2.default.register(_this);
    _this._muiTheme = context.muiTheme || (0, _getMuiTheme2.default)();
    _this._proxy = context.proxy;
    _this._requestHeaders = context.requestHeaders;
    _FeatureStore2.default.bindMap(_this.props.map, _this._proxy);
    Select.interactions.RECTANGLE.on('boxend', _this._onBoxEnd, _this);
    _this.state = {
      disabled: false,
      secondary: false
    };
    return _this;
  }

  _createClass(Select, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { muiTheme: this._muiTheme };
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _AppDispatcher2.default.unregister(this._dispatchToken);
    }
  }, {
    key: '_handleSelection',
    value: function _handleSelection(feature, selected) {
      if (feature.get('features')) {
        var children = feature.get('features');
        for (var i = 0, ii = children.length; i < ii; ++i) {
          children[i].selected = true;
        }
        feature.changed();
        selected = selected.concat(children);
      } else {
        selected.push(feature);
      }
      return selected;
    }
  }, {
    key: '_onBoxEnd',
    value: function _onBoxEnd(evt) {
      var box = evt.target.getGeometry().getExtent();
      var layers = _LayerStore2.default.getState().flatLayers;
      for (var i = 0, ii = layers.length; i < ii; ++i) {
        var lyr = layers[i];
        if (lyr.getVisible() && lyr.get('isSelectable') === true) {
          var selected = [];
          if (lyr.getSource() instanceof _openlayers2.default.source.Vector) {
            lyr.getSource().forEachFeatureIntersectingExtent(box, function (feature) {
              selected = this._handleSelection(feature, selected);
            }, this);
            _SelectActions2.default.selectFeatures(lyr, selected, true);
          } else {
            var me = this;
            _WFSService2.default.bboxFilter(lyr, this.props.map.getView(), box, function (features) {
              for (var i = 0, ii = features.length; i < ii; ++i) {
                selected = me._handleSelection(features[i], selected);
              }
              _FeatureStore2.default.appendFeatures(lyr, selected);
              _SelectActions2.default.selectFeatures(lyr, selected, true);
            }, undefined, this._proxy, this._requestHeaders);
          }
        }
      }
    }
  }, {
    key: 'activate',
    value: function activate(interactions) {
      _toolutil2.default.activate(this, interactions);
      _FeatureStore2.default.setSelectOnClick(true);
      this.setState({ secondary: true });
    }
  }, {
    key: 'deactivate',
    value: function deactivate() {
      _toolutil2.default.deactivate(this);
      _FeatureStore2.default.setSelectOnClick(false);
      this.setState({ secondary: false });
    }
  }, {
    key: '_selectByRectangle',
    value: function _selectByRectangle() {
      if (!this.state.secondary) {
        this.activate(Select.interactions.RECTANGLE);
        this.setState({ secondary: !this.state.secondary });
      }
    }
  }, {
    key: 'disable',
    value: function disable() {
      this.setState({ disabled: true });
    }
  }, {
    key: 'enable',
    value: function enable() {
      this.setState({ disabled: false });
    }
  }, {
    key: '_clear',
    value: function _clear() {
      this.props.map.getLayers().forEach(function (lyr) {
        if (lyr.getVisible() && lyr.get('isSelectable') === true) {
          _SelectActions2.default.clear(lyr);
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var formatMessage = this.props.intl.formatMessage;

      return _react2.default.createElement(
        _IconMenu2.default,
        { style: this.props.style, anchorOrigin: { horizontal: 'right', vertical: 'bottom' }, targetOrigin: { horizontal: 'right', vertical: 'top' },
          className: (0, _classnames2.default)('sdk-component select', this.props.className),
          iconButtonElement: _react2.default.createElement(_Button2.default, { secondary: this.state.secondary, buttonType: 'Icon', tooltip: formatMessage(messages.menubuttontitle), disabled: this.state.disabled, iconClassName: 'headerIcons ms ms-select-box' }) },
        _react2.default.createElement(_MenuItem2.default, { disabled: this.state.disabled, onTouchTap: this._selectByRectangle.bind(this), primaryText: formatMessage(messages.selectbyrectangletext), leftIcon: _react2.default.createElement('i', { className: 'ms ms-select-box' }) }),
        _react2.default.createElement(_Divider2.default, null),
        _react2.default.createElement(_MenuItem2.default, { disabled: this.state.disabled, onTouchTap: this._clear.bind(this), primaryText: formatMessage(messages.clearselectiontext), leftIcon: _react2.default.createElement(_delete2.default, null) })
      );
    }
  }]);

  return Select;
}(_react2.default.PureComponent), _class.propTypes = {
  /**
   * The map onto which to activate and deactivate the interactions.
   */
  map: _react2.default.PropTypes.instanceOf(_openlayers2.default.Map).isRequired,
  /**
   * The toggleGroup to use. When this tool is activated, all other tools in the same toggleGroup will be deactivated.
   */
  toggleGroup: _react2.default.PropTypes.string,
  /**
   * Identifier to use for this tool. Can be used to group tools together.
   */
  toolId: _react2.default.PropTypes.string,
  /**
   * Css class name to apply on the root element of this component.
   */
  className: _react2.default.PropTypes.string,
  /**
   * Style config.
   */
  style: _react2.default.PropTypes.object,
  /**
   * @ignore
   */
  intl: _reactIntl.intlShape.isRequired
}, _class.contextTypes = {
  muiTheme: _react2.default.PropTypes.object,
  proxy: _react2.default.PropTypes.string,
  requestHeaders: _react2.default.PropTypes.object
}, _class.childContextTypes = {
  muiTheme: _react2.default.PropTypes.object.isRequired
}, _class.interactions = {
  'RECTANGLE': new _openlayers2.default.interaction.DragBox({
    condition: _openlayers2.default.events.condition.noModifierKeys,
    style: new _openlayers2.default.style.Style({
      stroke: new _openlayers2.default.style.Stroke({
        color: [0, 0, 255, 1]
      })
    })
  })
}, _temp);
exports.default = (0, _reactIntl.injectIntl)(Select);