'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                    * Licensed under the Apache License, Version 2.0 (the "License").
                    * You may not use this file except in compliance with the License.
                    * You may obtain a copy of the License at
                    * http://www.apache.org/licenses/LICENSE-2.0
                    * Unless required by applicable law or agreed to in writing, software
                    * distributed under the License is distributed on an "AS IS" BASIS,
                    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    * See the License for the specific language governing permissions and limitations under the License.
                    */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _openlayers = require('openlayers');

var _openlayers2 = _interopRequireDefault(_openlayers);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _AppDispatcher = require('../dispatchers/AppDispatcher');

var _AppDispatcher2 = _interopRequireDefault(_AppDispatcher);

var _List = require('material-ui/List');

var _GeocodingConstants = require('../constants/GeocodingConstants');

var _GeocodingConstants2 = _interopRequireDefault(_GeocodingConstants);

var _GeocodingActions = require('../actions/GeocodingActions');

var _GeocodingActions2 = _interopRequireDefault(_GeocodingActions);

var _reactIntl = require('react-intl');

var _Paper = require('material-ui/Paper');

var _Paper2 = _interopRequireDefault(_Paper);

var _getMuiTheme = require('material-ui/styles/getMuiTheme');

var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);

require('./GeocodingResults.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var messages = (0, _reactIntl.defineMessages)({
  noresults: {
    'id': 'geocodingresults.noresults',
    'defaultMessage': 'No results found'
  }
});

/**
 * This component displays the results of geocoding search. The geocoding search is initiated by the Geocoding component.
 *
 * ```xml
 * <GeocodingResults map={map} />
 * ```
 */
var GeocodingResults = (_temp = _class = function (_React$PureComponent) {
  _inherits(GeocodingResults, _React$PureComponent);

  function GeocodingResults(props, context) {
    _classCallCheck(this, GeocodingResults);

    var _this = _possibleConstructorReturn(this, (GeocodingResults.__proto__ || Object.getPrototypeOf(GeocodingResults)).call(this, props));

    var me = _this;
    _this._muiTheme = context.muiTheme || (0, _getMuiTheme2.default)();
    _this._dispatchToken = _AppDispatcher2.default.register(function (payload) {
      var action = payload.action;
      switch (action.type) {
        case _GeocodingConstants2.default.SHOW_SEARCH_RESULTS:
          me.setState({ searchResults: action.searchResults });
          me._setVisible(true);
          break;
        case _GeocodingConstants2.default.CLEAR_SEARCH_RESULT:
          me.setState({ searchResults: null });
          me._setVisible(false);
          break;
        default:
          break;
      }
    });
    _this.state = {
      searchResults: null
    };
    return _this;
  }

  _createClass(GeocodingResults, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { muiTheme: this._muiTheme };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._layer = new _openlayers2.default.layer.Vector({
        title: null,
        managed: false,
        style: new _openlayers2.default.style.Style({
          image: new _openlayers2.default.style.Icon({
            anchor: [0.5, 46],
            anchorXUnits: 'fraction',
            anchorYUnits: 'pixels',
            opacity: 0.75,
            src: this.props.markerUrl
          })
        }),
        source: new _openlayers2.default.source.Vector({ wrapX: false })
      });
      this.props.map.addLayer(this._layer);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _AppDispatcher2.default.unregister(this._dispatchToken);
    }
  }, {
    key: '_setVisible',
    value: function _setVisible(visible) {
      _reactDom2.default.findDOMNode(this).parentNode.style.display = visible ? 'block' : 'none';
    }
  }, {
    key: '_zoomTo',
    value: function _zoomTo(result) {
      this._setVisible(false);
      var map = this.props.map;
      var center = [parseFloat(result.lon), parseFloat(result.lat)];
      center = _openlayers2.default.proj.transform(center, 'EPSG:4326', map.getView().getProjection());
      map.getView().setCenter(center);
      map.getView().setZoom(this.props.zoom);
      var source = this._layer.getSource();
      source.clear();
      var feature = new _openlayers2.default.Feature({
        geometry: new _openlayers2.default.geom.Point(center)
      });
      if (result.icon) {
        feature.setStyle(new _openlayers2.default.style.Style({
          image: new _openlayers2.default.style.Icon({
            src: result.icon
          })
        }));
      }
      source.addFeature(feature);
      _GeocodingActions2.default.zoomToResult(result);
    }
  }, {
    key: 'render',
    value: function render() {
      var formatMessage = this.props.intl.formatMessage;

      var resultNodes;
      var subheader;
      if (this.state.searchResults !== null) {
        if (this.state.searchResults.length > 0) {
          resultNodes = this.state.searchResults.map(function (result) {
            var icon;
            if (result.icon) {
              icon = _react2.default.createElement('img', { src: result.icon });
            }
            return _react2.default.createElement(_List.ListItem, { leftIcon: icon, primaryText: result.display_name, key: result.place_id, onTouchTap: this._zoomTo.bind(this, result) });
          }, this);
        } else {
          subheader = formatMessage(messages.noresults);
        }
      }
      return _react2.default.createElement(
        _Paper2.default,
        { style: this.props.style, zDepth: 0, className: (0, _classnames2.default)('sdk-component geocoding-results', this.props.className) },
        _react2.default.createElement(
          _Paper2.default,
          { zDepth: 0, className: 'geocoding-results-header' },
          subheader
        ),
        _react2.default.createElement(
          _List.List,
          { className: 'geocoding-results-list' },
          resultNodes
        )
      );
    }
  }]);

  return GeocodingResults;
}(_react2.default.PureComponent), _class.propTypes = {
  /**
   * The ol3 map on whose view to perform the center action.
   */
  map: _react2.default.PropTypes.instanceOf(_openlayers2.default.Map).isRequired,
  /**
   * The zoom level used when centering the view on a geocoding result.
   */
  zoom: _react2.default.PropTypes.number,
  /**
   * Url to the marker image to use for bookmark position.
   */
  markerUrl: _react2.default.PropTypes.string,
  /**
   * Css class name to apply on the root element of this component.
   */
  className: _react2.default.PropTypes.string,
  /**
   * Style config.
   */
  style: _react2.default.PropTypes.object,
  /**
   * @ignore
   */
  intl: _reactIntl.intlShape.isRequired
}, _class.contextTypes = {
  muiTheme: _react2.default.PropTypes.object
}, _class.childContextTypes = {
  muiTheme: _react2.default.PropTypes.object.isRequired
}, _class.defaultProps = {
  zoom: 10,
  markerUrl: './resources/marker.png'
}, _temp);
exports.default = (0, _reactIntl.injectIntl)(GeocodingResults);