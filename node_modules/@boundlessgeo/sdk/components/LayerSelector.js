'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                    * Licensed under the Apache License, Version 2.0 (the "License").
                    * You may not use this file except in compliance with the License.
                    * You may obtain a copy of the License at
                    * http://www.apache.org/licenses/LICENSE-2.0
                    * Unless required by applicable law or agreed to in writing, software
                    * distributed under the License is distributed on an "AS IS" BASIS,
                    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    * See the License for the specific language governing permissions and limitations under the License.
                    */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _SelectField = require('material-ui/SelectField');

var _SelectField2 = _interopRequireDefault(_SelectField);

var _LayerStore = require('../stores/LayerStore');

var _LayerStore2 = _interopRequireDefault(_LayerStore);

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _getMuiTheme = require('material-ui/styles/getMuiTheme');

var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);

var _reactIntl = require('react-intl');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var messages = (0, _reactIntl.defineMessages)({
  emptytext: {
    'id': 'layerselector.emptytext',
    'defaultMessage': 'Select a layer'
  },
  labeltext: {
    'id': 'layerselector.labeltext',
    'defaultMessage': 'Layer'
  }
});

/**
 * A combobox to select a layer.
 *
 * ```xml
 * <LayerSelector map={map} layers={layersArray} onChange={this._onChange.bind(this)} />
 * ```
 *
 * ![Layer Selector](../LayerSelector.png)
 * ![Opened Layer Selector](../LayerSelectorOpen.png)
 */
var LayerSelector = (_temp = _class = function (_React$PureComponent) {
  _inherits(LayerSelector, _React$PureComponent);

  function LayerSelector(props, context) {
    _classCallCheck(this, LayerSelector);

    var _this = _possibleConstructorReturn(this, (LayerSelector.__proto__ || Object.getPrototypeOf(LayerSelector)).call(this, props));

    _this._muiTheme = context.muiTheme || (0, _getMuiTheme2.default)();
    _this.state = {
      value: props.value
    };
    return _this;
  }

  _createClass(LayerSelector, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      if (this.props.value !== props.value) {
        this.setState({
          value: props.value
        });
      }
    }
  }, {
    key: 'getChildContext',
    value: function getChildContext() {
      return { muiTheme: this._muiTheme };
    }
  }, {
    key: '_onItemChange',
    value: function _onItemChange(evt, index, value) {
      var layer = _LayerStore2.default.findLayer(value);
      this.props.onChange.call(this, layer);
      this.setState({ value: value });
    }
  }, {
    key: 'render',
    value: function render() {
      var formatMessage = this.props.intl.formatMessage;

      var selectItems = this.props.layers.map(function (lyr, idx) {
        var title = lyr.get('title'),
            id = lyr.get('id');
        return _react2.default.createElement(_MenuItem2.default, { key: id, value: id, label: title, primaryText: title });
      });
      return _react2.default.createElement(
        _SelectField2.default,
        { style: this.props.style, className: (0, _classnames2.default)('sdk-component layer-selector', this.props.className), floatingLabelFixed: true, floatingLabelText: this.props.labelText ? this.props.labelText : formatMessage(messages.labeltext), hintText: formatMessage(messages.emptytext), value: this.state.value, onChange: this._onItemChange.bind(this) },
        selectItems
      );
    }
  }]);

  return LayerSelector;
}(_react2.default.PureComponent), _class.propTypes = {
  /**
   * The layers to use.
   */
  layers: _react2.default.PropTypes.array.isRequired,
  /**
   * The default value of the layer selector, i.e. the layer to select by default.
   */
  value: _react2.default.PropTypes.string,
  /**
   * Change callback function.
   */
  onChange: _react2.default.PropTypes.func.isRequired,
  /**
   * Css class name to apply on the root element of this component.
   */
  className: _react2.default.PropTypes.string,
  /**
   * Style config.
   */
  style: _react2.default.PropTypes.object,
  /**
   * Optional label text for combo box, will override the default.
   */
  labelText: _react2.default.PropTypes.string,
  /**
   * @ignore
   */
  intl: _reactIntl.intlShape.isRequired
}, _class.contextTypes = {
  muiTheme: _react2.default.PropTypes.object
}, _class.childContextTypes = {
  muiTheme: _react2.default.PropTypes.object.isRequired
}, _temp);
exports.default = (0, _reactIntl.injectIntl)(LayerSelector);