'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                    * Licensed under the Apache License, Version 2.0 (the "License").
                    * You may not use this file except in compliance with the License.
                    * You may obtain a copy of the License at
                    * http://www.apache.org/licenses/LICENSE-2.0
                    * Unless required by applicable law or agreed to in writing, software
                    * distributed under the License is distributed on an "AS IS" BASIS,
                    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    * See the License for the specific language governing permissions and limitations under the License.
                    */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _openlayers = require('openlayers');

var _openlayers2 = _interopRequireDefault(_openlayers);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _FilterService = require('../services/FilterService');

var _FilterService2 = _interopRequireDefault(_FilterService);

var _Dialog = require('./Dialog');

var _Dialog2 = _interopRequireDefault(_Dialog);

var _Toolbar = require('material-ui/Toolbar');

var _Button = require('./Button');

var _Button2 = _interopRequireDefault(_Button);

var _List = require('material-ui/List');

var _delete = require('material-ui/svg-icons/action/delete');

var _delete2 = _interopRequireDefault(_delete);

var _TextField = require('material-ui/TextField');

var _TextField2 = _interopRequireDefault(_TextField);

var _reactIntl = require('react-intl');

var _FilterHelp = require('./FilterHelp');

var _FilterHelp2 = _interopRequireDefault(_FilterHelp);

var _getMuiTheme = require('material-ui/styles/getMuiTheme');

var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var messages = (0, _reactIntl.defineMessages)({
  closebutton: {
    'id': 'filtermodal.closebutton',
    'defaultMessage': 'Cancel'
  },
  inputlabel: {
    'id': 'filtermodal.inputlabel',
    'defaultMessage': 'Filter'
  },
  addfiltertext: {
    'id': 'filtermodal.addfiltertext',
    'defaultMessage': 'Add'
  },
  title: {
    'id': 'filtermodal.title',
    'defaultMessage': 'Filters for layer {layer}'
  },
  errortext: {
    'id': 'filtermodal.errortext',
    'defaultMessage': 'Invalid filter, should be for instance foo == "Bar"'
  }
});

/**
 * Modal for building filters to filter the features of a local vector layer.
 *
 * ```xml
 * <FilterModal layer={myLayer} />
 * ```
 */
var FilterModal = (_temp = _class = function (_React$PureComponent) {
  _inherits(FilterModal, _React$PureComponent);

  function FilterModal(props, context) {
    _classCallCheck(this, FilterModal);

    var _this = _possibleConstructorReturn(this, (FilterModal.__proto__ || Object.getPrototypeOf(FilterModal)).call(this, props));

    _this._muiTheme = context.muiTheme || (0, _getMuiTheme2.default)();
    _this.state = {
      open: false,
      filters: [],
      hasError: false
    };
    return _this;
  }

  _createClass(FilterModal, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { muiTheme: this._muiTheme };
    }
  }, {
    key: 'close',
    value: function close() {
      this.props.onRequestClose();
    }
  }, {
    key: '_setStyleFunction',
    value: function _setStyleFunction() {
      var layer = this.props.layer;
      if (layer instanceof _openlayers2.default.layer.Vector) {
        this._styleSet = true;
        var cluster = layer.getSource() instanceof _openlayers2.default.source.Cluster;
        var style = layer.getStyle();
        var me = this;
        layer.setStyle(function (feature, resolution) {
          var hide = false;
          if (!cluster) {
            for (var i = 0, ii = me.state.filters.length; i < ii; i++) {
              if (!me.state.filters[i].filter(feature.getProperties())) {
                hide = true;
                continue;
              }
            }
          }
          if (hide) {
            return null;
          } else {
            if (style instanceof _openlayers2.default.style.Style || Array.isArray(style)) {
              return style;
            } else {
              return style.call(this, feature, resolution);
            }
          }
        });
      }
    }
  }, {
    key: '_addFilter',
    value: function _addFilter() {
      var layer = this.props.layer;
      if (!this._styleSet) {
        this._setStyleFunction();
      }
      var filters = this.state.filters.slice();
      var filter;
      var expression = this.refs.filterTextBox.getValue();
      try {
        filter = _FilterService2.default.filter(expression);
      } catch (e) {
        this.setState({ hasError: true });
        return;
      }
      var exists = false;
      for (var i = 0, ii = filters.length; i < ii; ++i) {
        if (filters[i].title === expression) {
          exists = true;
          break;
        }
      }
      if (exists === false) {
        filters.push({ title: expression, filter: filter });
        this.setState({
          filters: filters,
          hasError: false
        });
        if (layer.getSource() instanceof _openlayers2.default.source.Cluster) {
          this._updateCluster();
        }
        layer.getSource().changed();
      }
    }
  }, {
    key: '_removeFilter',
    value: function _removeFilter(filter) {
      var layer = this.props.layer;
      var filters = this.state.filters.slice();
      for (var i = 0, ii = filters.length; i < ii; i++) {
        if (filters[i] === filter) {
          filters.splice(i, 1);
          break;
        }
      }
      this.setState({ filters: filters });
      if (layer.getSource() instanceof _openlayers2.default.source.Cluster) {
        this._updateCluster();
      }
      layer.getSource().changed();
    }
  }, {
    key: '_updateCluster',
    value: function _updateCluster() {
      var layer = this.props.layer;
      var features = layer.getSource().getFeatures();
      for (var i = 0, ii = features.length; i < ii; ++i) {
        var subFeatures = features[i].get('features');
        for (var j = 0, jj = subFeatures.length; j < jj; ++j) {
          var hide = false;
          for (var f = 0, ff = this.state.filters.length; f < ff; f++) {
            if (!this.state.filters[f].filter(subFeatures[j].getProperties())) {
              hide = true;
              continue;
            }
          }
          // do not use an observable property, we do not want to notify
          subFeatures[j].hide = hide;
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var formatMessage = this.props.intl.formatMessage;

      var errorText;
      if (this.state.hasError) {
        errorText = formatMessage(messages.errortext);
      }
      var filters = this.state.filters.map(function (f) {
        var filterName = f.title.replace(/\W+/g, '');
        return _react2.default.createElement(_List.ListItem, { key: filterName, rightIcon: _react2.default.createElement(_delete2.default, null), primaryText: f.title, ref: filterName, onTouchTap: this._removeFilter.bind(this, f) });
      }, this);
      var actions = [_react2.default.createElement(_Button2.default, { key: 'closeButton', buttonType: 'Flat', label: formatMessage(messages.closebutton), onTouchTap: this.close.bind(this) })];
      return _react2.default.createElement(
        _Dialog2.default,
        { style: this.props.style, inline: this.props.inline, className: (0, _classnames2.default)('sdk-component filter-modal', this.props.className), actions: actions, title: formatMessage(messages.title, { layer: this.props.layer.get('title') }), modal: true, open: this.props.open, onRequestClose: this.close.bind(this) },
        _react2.default.createElement(
          _Toolbar.Toolbar,
          { style: { marginBottom: 20, backgroundColor: '#ffffff !important' } },
          _react2.default.createElement(
            _Toolbar.ToolbarGroup,
            { firstChild: true, style: { width: 500 } },
            _react2.default.createElement(_TextField2.default, { floatingLabelText: formatMessage(messages.inputlabel), floatingLabelFixed: true, name: 'filter', errorText: errorText, fullWidth: true, ref: 'filterTextBox' })
          ),
          _react2.default.createElement(
            _Toolbar.ToolbarGroup,
            null,
            _react2.default.createElement(_FilterHelp2.default, { intl: this.props.intl })
          ),
          _react2.default.createElement(
            _Toolbar.ToolbarGroup,
            { lastChild: true },
            _react2.default.createElement(_Button2.default, { buttonType: 'Flat', primary: true, label: formatMessage(messages.addfiltertext), onTouchTap: this._addFilter.bind(this) })
          )
        ),
        _react2.default.createElement(
          _List.List,
          null,
          filters
        )
      );
    }
  }]);

  return FilterModal;
}(_react2.default.PureComponent), _class.propTypes = {
  /**
   * vector layer to filter features on.
   */
  layer: _react2.default.PropTypes.instanceOf(_openlayers2.default.layer.Vector).isRequired,
  /**
   * Css class name to apply on the root element of this component.
   */
  className: _react2.default.PropTypes.string,
  /**
   * Style config.
   */
  style: _react2.default.PropTypes.object,
  /**
   * @ignore
   */
  intl: _reactIntl.intlShape.isRequired
}, _class.contextTypes = {
  muiTheme: _react2.default.PropTypes.object
}, _class.childContextTypes = {
  muiTheme: _react2.default.PropTypes.object.isRequired
}, _temp);
exports.default = (0, _reactIntl.injectIntl)(FilterModal);