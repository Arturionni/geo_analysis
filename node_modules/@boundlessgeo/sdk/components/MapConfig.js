'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                    * Licensed under the Apache License, Version 2.0 (the "License").
                    * You may not use this file except in compliance with the License.
                    * You may obtain a copy of the License at
                    * http://www.apache.org/licenses/LICENSE-2.0
                    * Unless required by applicable law or agreed to in writing, software
                    * distributed under the License is distributed on an "AS IS" BASIS,
                    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    * See the License for the specific language governing permissions and limitations under the License.
                    */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _openlayers = require('openlayers');

var _openlayers2 = _interopRequireDefault(_openlayers);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _IconMenu = require('material-ui/IconMenu');

var _IconMenu2 = _interopRequireDefault(_IconMenu);

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _Snackbar = require('material-ui/Snackbar');

var _Snackbar2 = _interopRequireDefault(_Snackbar);

var _Button = require('./Button');

var _Button2 = _interopRequireDefault(_Button);

var _MapConfigService = require('../services/MapConfigService');

var _MapConfigService2 = _interopRequireDefault(_MapConfigService);

var _reactIntl = require('react-intl');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var messages = (0, _reactIntl.defineMessages)({
  savetext: {
    'id': 'mapconfig.savetext',
    'defaultMessage': 'Save'
  },
  savetitle: {
    'id': 'mapconfig.savetitle',
    'defaultMessage': 'Save map configuration to local storage'
  },
  loadtext: {
    'id': 'mapconfig.loadtext',
    'defaultMessage': 'Load'
  },
  loadtitle: {
    'id': 'mapconfig.loadtitle',
    'defaultMessage': 'Load map configuration from local storage'
  },
  savesuccess: {
    'id': 'mapconfig.savesuccess',
    'defaultMessage': 'Map was saved successfully to the browser\'s local storage.'
  },
  savefailure: {
    'id': 'mapconfig.savefailure',
    'defaultMessage': 'There was an error saving the map to the browser\'s local storage.'
  },
  loadsuccess: {
    'id': 'mapconfig.loadsuccess',
    'defaultMessage': 'Map was loaded successfully from the browser\'s local storage.'
  },
  loadfailure: {
    'id': 'mapconfig.loadfailure',
    'defaultMessage': 'There was an error loading the map from the browser\'s local storage'
  },
  dropdowntext: {
    'id': 'mapconfig.dropdowntext',
    'defaultMessage': 'Map Config'
  }
});

var localStorageKey = 'web-sdk-map-config';

/**
 * Export the map configuration and ability to reload it from local storage.
 *
 * ```xml
 * <MapConfig map={map} />
 * ```
 *
 * ![MapConfig](../MapConfig.png)
 */
var MapConfig = (_temp = _class = function (_React$PureComponent) {
  _inherits(MapConfig, _React$PureComponent);

  function MapConfig(props) {
    _classCallCheck(this, MapConfig);

    var _this = _possibleConstructorReturn(this, (MapConfig.__proto__ || Object.getPrototypeOf(MapConfig)).call(this, props));

    _this.state = {
      msg: null,
      info: false,
      disabled: global.localStorage.getItem(localStorageKey) === null
    };
    return _this;
  }

  _createClass(MapConfig, [{
    key: '_load',
    value: function _load() {
      var formatMessage = this.props.intl.formatMessage;

      var msg;
      try {
        var config = global.localStorage.getItem(localStorageKey);
        var mapConfig = JSON.parse(config);
        _MapConfigService2.default.load(mapConfig, this.props.map);
        msg = formatMessage(messages.loadsuccess);
      } catch (e) {
        msg = formatMessage(messages.loadfailure);
      }
      this.setState({
        info: true,
        msg: msg
      });
    }
  }, {
    key: '_save',
    value: function _save() {
      var formatMessage = this.props.intl.formatMessage;

      var msg, disabled;
      try {
        var config = _MapConfigService2.default.save(this.props.map);
        var output = JSON.stringify(config);
        global.localStorage.setItem(localStorageKey, output);
        msg = formatMessage(messages.savesuccess);
        disabled = false;
      } catch (e) {
        msg = formatMessage(messages.savefailure);
        disabled = true;
      }
      this.setState({
        disabled: disabled,
        info: true,
        msg: msg
      });
    }
  }, {
    key: '_onRequestClose',
    value: function _onRequestClose() {
      this.setState({
        info: false
      });
    }
  }, {
    key: '_handleChange',
    value: function _handleChange(event, value) {
      if (value === 1) {
        this._load();
      } else if (value === 2) {
        this._save();
      } else {
        this._clear();
      }
      this.setState({ value: value });
    }
  }, {
    key: 'render',
    value: function render() {
      var formatMessage = this.props.intl.formatMessage;

      var info;
      if (this.state.info) {
        info = _react2.default.createElement(_Snackbar2.default, { autoHideDuration: 2000, message: this.state.msg, open: this.state.info, onRequestClose: this._onRequestClose.bind(this) });
      }
      return _react2.default.createElement(
        'span',
        null,
        _react2.default.createElement(
          _IconMenu2.default,
          {
            style: this.props.style,
            className: (0, _classnames2.default)('sdk-component map-config headerIcons', this.props.className),
            anchorOrigin: { horizontal: 'right', vertical: 'bottom' }, targetOrigin: { horizontal: 'right', vertical: 'top' },
            iconButtonElement: _react2.default.createElement(_Button2.default, { tooltip: formatMessage(messages.dropdowntext), buttonType: 'Icon', disabled: this.state.disabled, iconClassName: 'headerIcons ms ms-map-o' }),
            value: this.state.value,
            onChange: this._handleChange.bind(this) },
          _react2.default.createElement(_MenuItem2.default, { disabled: this.state.disabled, value: 1, primaryText: formatMessage(messages.loadtext) }),
          _react2.default.createElement(_MenuItem2.default, { disabled: this.state.disabled, value: 2, primaryText: formatMessage(messages.savetext) })
        ),
        info
      );
    }
  }]);

  return MapConfig;
}(_react2.default.PureComponent), _class.propTypes = {
  /**
   * The ol3 map to save the layers from.
   */
  map: _react2.default.PropTypes.instanceOf(_openlayers2.default.Map).isRequired,
  /**
   * Css class name to apply on the root element of this component.
   */
  className: _react2.default.PropTypes.string,
  /**
   * Style config.
   */
  style: _react2.default.PropTypes.object,
  /**
   * Are we the last child of the toolbar?
   */
  lastChild: _react2.default.PropTypes.bool,
  /**
   * Are we the first child of the toolbar?
   */
  firstChild: _react2.default.PropTypes.bool,
  /**
   * @ignore
   */
  intl: _reactIntl.intlShape.isRequired
}, _class.childContextTypes = {
  muiTheme: _react2.default.PropTypes.object.isRequired
}, _temp);
exports.default = (0, _reactIntl.injectIntl)(MapConfig);