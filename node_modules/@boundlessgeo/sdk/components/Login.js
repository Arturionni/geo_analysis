'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                    * Licensed under the Apache License, Version 2.0 (the "License").
                    * You may not use this file except in compliance with the License.
                    * You may obtain a copy of the License at
                    * http://www.apache.org/licenses/LICENSE-2.0
                    * Unless required by applicable law or agreed to in writing, software
                    * distributed under the License is distributed on an "AS IS" BASIS,
                    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    * See the License for the specific language governing permissions and limitations under the License.
                    */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Button = require('./Button');

var _Button2 = _interopRequireDefault(_Button);

var _reactIntl = require('react-intl');

var _LoginModal = require('./LoginModal');

var _LoginModal2 = _interopRequireDefault(_LoginModal);

var _AppDispatcher = require('../dispatchers/AppDispatcher');

var _AppDispatcher2 = _interopRequireDefault(_AppDispatcher);

var _LoginConstants = require('../constants/LoginConstants');

var _LoginConstants2 = _interopRequireDefault(_LoginConstants);

var _AuthService = require('../services/AuthService');

var _AuthService2 = _interopRequireDefault(_AuthService);

var _getMuiTheme = require('material-ui/styles/getMuiTheme');

var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var messages = (0, _reactIntl.defineMessages)({
  buttontext: {
    'id': 'login.buttontext',
    'defaultMessage': 'Login'
  },
  logouttext: {
    'id': 'login.logouttext',
    'defaultMessage': 'Logout'
  }
});

/**
 * Button that shows a login dialog for integration with GeoServer security.
 *
 * ```xml
 * <Login />
 * ```
 *
 * ![Login](../Login.png)
 * ![Login Logged In](../LoginLoggedIn.png)
 * ![Login Logout](../LoginLogout.png)
 */
var Login = (_temp = _class = function (_React$PureComponent) {
  _inherits(Login, _React$PureComponent);

  function Login(props, context) {
    _classCallCheck(this, Login);

    var _this = _possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props));

    _this._muiTheme = context.muiTheme || (0, _getMuiTheme2.default)();
    _this._proxy = context.proxy;
    _this._requestHeaders = context.requestHeaders;
    _this.state = {
      user: null,
      modalOpen: false
    };
    var me = _this;
    _this._dispatchToken = _AppDispatcher2.default.register(function (payload) {
      var action = payload.action;
      switch (action.type) {
        case _LoginConstants2.default.LOGIN:
          me._doLogin(action.user, action.pwd, action.failure, action.scope);
          break;
        default:
          break;
      }
    });
    return _this;
  }

  _createClass(Login, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { muiTheme: this._muiTheme };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var me = this;
      this._request = _AuthService2.default.getStatus(this.props.url, function (user) {
        delete me._request;
        me.setState({ user: user });
      }, function () {
        delete me._request;
        me.setState({ user: null });
      }, this._proxy, this._requestHeaders);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _AppDispatcher2.default.unregister(this._dispatchToken);
      if (this._request) {
        this._request.abort();
      }
    }
  }, {
    key: '_doLogin',
    value: function _doLogin(user, pwd, failureCb, scope) {
      var me = this;
      _AuthService2.default.login(this.props.url, user, pwd, function () {
        me.setState({ user: user });
      }, function (xmlhttp) {
        me.setState({ user: null });
        failureCb.call(scope, xmlhttp);
      }, this._proxy, this._requestHeaders);
    }
  }, {
    key: '_showLoginDialog',
    value: function _showLoginDialog() {
      this.setState({ modalOpen: true });
    }
  }, {
    key: '_doLogout',
    value: function _doLogout() {
      _AuthService2.default.logoff();
      this.setState({ user: null });
    }
  }, {
    key: '_onClose',
    value: function _onClose() {
      this.setState({ modalOpen: false });
    }
  }, {
    key: 'render',
    value: function render() {
      var formatMessage = this.props.intl.formatMessage;

      if (this.state.user !== null) {
        return _react2.default.createElement(_Button2.default, { style: this.props.style, buttonType: 'Icon', iconClassName: 'headerIcons fa fa-sign-out', className: (0, _classnames2.default)('sdk-component login', this.props.className), onTouchTap: this._doLogout.bind(this), tooltip: formatMessage(messages.logouttext) });
      } else {
        return _react2.default.createElement(
          _Button2.default,
          { style: this.props.style, buttonType: 'Icon', iconClassName: 'headerIcons fa fa-sign-in', className: (0, _classnames2.default)('sdk-component login', this.props.className), tooltip: formatMessage(messages.buttontext), onTouchTap: this._showLoginDialog.bind(this) },
          _react2.default.createElement(_LoginModal2.default, _extends({ close: this._onClose.bind(this), open: this.state.modalOpen }, this.props))
        );
      }
    }
  }]);

  return Login;
}(_react2.default.PureComponent), _class.propTypes = {
  /**
   * Url to geoserver login endpoint.
   */
  url: _react2.default.PropTypes.string,
  /**
   * Css class name to apply on the root element of this component.
   */
  className: _react2.default.PropTypes.string,
  /**
   * Style config.
   */
  style: _react2.default.PropTypes.object,
  /**
   * @ignore
   */
  intl: _reactIntl.intlShape.isRequired
}, _class.contextTypes = {
  muiTheme: _react2.default.PropTypes.object,
  proxy: _react2.default.PropTypes.string,
  requestHeaders: _react2.default.PropTypes.object
}, _class.childContextTypes = {
  muiTheme: _react2.default.PropTypes.object.isRequired
}, _class.defaultProps = {
  url: '/geoserver/app/api/login'
}, _temp);
exports.default = (0, _reactIntl.injectIntl)(Login);