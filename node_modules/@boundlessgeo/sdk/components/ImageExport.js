'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                    * Licensed under the Apache License, Version 2.0 (the "License").
                    * You may not use this file except in compliance with the License.
                    * You may obtain a copy of the License at
                    * http://www.apache.org/licenses/LICENSE-2.0
                    * Unless required by applicable law or agreed to in writing, software
                    * distributed under the License is distributed on an "AS IS" BASIS,
                    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    * See the License for the specific language governing permissions and limitations under the License.
                    */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _openlayers = require('openlayers');

var _openlayers2 = _interopRequireDefault(_openlayers);

require('blueimp-canvas-to-blob');

var _Button = require('./Button');

var _Button2 = _interopRequireDefault(_Button);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _browserFilesaver = require('browser-filesaver');

var _browserFilesaver2 = _interopRequireDefault(_browserFilesaver);

var _reactIntl = require('react-intl');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var messages = (0, _reactIntl.defineMessages)({
  buttontitle: {
    'id': 'imageexport.buttontitle',
    'defaultMessage': 'Export as image'
  },
  buttontext: {
    'id': 'imageexport.buttontext',
    'defaultMessage': 'Export'
  }
});

/**
 * Export the map as a PNG file. This will only work if the canvas is not tainted.
 *
 * ```xml
 * <ImageExport map={map} />
 * ```
 */
var ImageExport = (_temp = _class = function (_React$PureComponent) {
  _inherits(ImageExport, _React$PureComponent);

  function ImageExport(props) {
    _classCallCheck(this, ImageExport);

    return _possibleConstructorReturn(this, (ImageExport.__proto__ || Object.getPrototypeOf(ImageExport)).call(this, props));
  }

  _createClass(ImageExport, [{
    key: '_handleClick',
    value: function _handleClick() {
      var map = this.props.map;
      map.once('postcompose', function (evt) {
        var canvas = evt.context.canvas;
        canvas.toBlob(function (blob) {
          _browserFilesaver2.default.saveAs(blob, 'map.png');
        });
      });
      map.renderSync();
    }
  }, {
    key: 'render',
    value: function render() {
      var formatMessage = this.props.intl.formatMessage;

      return _react2.default.createElement(_Button2.default, { style: this.props.style, buttonType: 'Icon', className: (0, _classnames2.default)('sdk-component image-export', this.props.className), iconClassName: 'headerIcons ms ms-camera', tooltip: formatMessage(messages.buttontext), onTouchTap: this._handleClick.bind(this) });
    }
  }]);

  return ImageExport;
}(_react2.default.PureComponent), _class.propTypes = {
  /**
   * The ol3 map to export as PNG.
   */
  map: _react2.default.PropTypes.instanceOf(_openlayers2.default.Map).isRequired,
  /**
   * Css class name to apply on the root element of this component.
   */
  className: _react2.default.PropTypes.string,
  /**
   * Style config.
   */
  style: _react2.default.PropTypes.object,
  /**
   * @ignore
   */
  intl: _reactIntl.intlShape.isRequired
}, _temp);
exports.default = (0, _reactIntl.injectIntl)(ImageExport);