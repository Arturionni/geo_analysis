'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                    * Licensed under the Apache License, Version 2.0 (the "License").
                    * You may not use this file except in compliance with the License.
                    * You may obtain a copy of the License at
                    * http://www.apache.org/licenses/LICENSE-2.0
                    * Unless required by applicable law or agreed to in writing, software
                    * distributed under the License is distributed on an "AS IS" BASIS,
                    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    * See the License for the specific language governing permissions and limitations under the License.
                    */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _List = require('material-ui/List');

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _Subheader = require('material-ui/Subheader');

var _Subheader2 = _interopRequireDefault(_Subheader);

var _Paper = require('material-ui/Paper');

var _Paper2 = _interopRequireDefault(_Paper);

var _TextField = require('material-ui/TextField');

var _TextField2 = _interopRequireDefault(_TextField);

var _SelectField = require('material-ui/SelectField');

var _SelectField2 = _interopRequireDefault(_SelectField);

var _reactIntl = require('react-intl');

var _delete = require('material-ui/svg-icons/action/delete');

var _delete2 = _interopRequireDefault(_delete);

var _getMuiTheme = require('material-ui/styles/getMuiTheme');

var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);

var _Button = require('./Button');

var _Button2 = _interopRequireDefault(_Button);

var _Toolbar = require('material-ui/Toolbar');

var _colors = require('material-ui/styles/colors');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var messages = (0, _reactIntl.defineMessages)({
  addfilter: {
    'id': 'filtereditor.addfilter',
    'defaultMessage': 'Add filter'
  },
  attributelabel: {
    'id': 'filtereditor.attributelabel',
    'defaultMessage': 'Attribute'
  },
  emptytext: {
    'id': 'filtereditor.emptytext',
    'defaultMessage': 'Select an attribute'
  },
  filterlabel: {
    'id': 'filtereditor.filterlabel',
    'defaultMessage': 'Filter'
  },
  filterplaceholder: {
    'id': 'filtereditor.filterplaceholder',
    'defaultMessage': 'Type expression ....'
  },
  errortext: {
    'id': 'filtereditor.errortext',
    'defaultMessage': 'Invalid filter, use for instance ATTRIBUTE == "Value"'
  }
});

var operators = ['==', '!=', '>', '>=', '<', '<='];

var logical = [{ value: 'all', text: 'every filter matches' }, { value: 'any', text: 'any filter matches' }];

/**
 * Editor for a single filter. Used by the RuleEditor.
 *
 * ```xml
 * <FilterEditor onChange={this._onChange.bind(this)} initialExpression={expression} />
 * ```
 */
var FilterEditor = (_temp = _class = function (_React$PureComponent) {
  _inherits(FilterEditor, _React$PureComponent);

  function FilterEditor(props, context) {
    _classCallCheck(this, FilterEditor);

    var _this = _possibleConstructorReturn(this, (FilterEditor.__proto__ || Object.getPrototypeOf(FilterEditor)).call(this, props));

    _this._muiTheme = context.muiTheme || (0, _getMuiTheme2.default)();
    var filters = [],
        logical = 'all';
    var expression = _this.props.initialExpression;
    if (expression) {
      if (expression[0] === 'all' || expression[0] === 'any') {
        logical = expression[0];
        for (var i = 1, ii = expression.length; i < ii; i++) {
          filters.push({
            attribute: expression[i][1],
            operator: expression[i][0],
            value: expression[i][2]
          });
        }
      } else {
        filters.push({
          attribute: expression[1],
          operator: expression[0],
          value: expression[2]
        });
      }
    } else {
      filters.push({});
    }
    _this.state = {
      logical: logical,
      filters: filters
    };
    return _this;
  }

  _createClass(FilterEditor, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { muiTheme: this._muiTheme };
    }
  }, {
    key: '_generateFilter',
    value: function _generateFilter() {
      var result = [this.state.logical];
      for (var i = 0, ii = this.state.filters.length; i < ii; ++i) {
        var filter = this.state.filters[i];
        if (filter.operator !== undefined && filter.attribute !== undefined && filter.value !== undefined) {
          result.push([filter.operator, filter.attribute, filter.value]);
        }
      }
      return result;
    }
  }, {
    key: '_onChangeProperty',
    value: function _onChangeProperty(filter, evt, idx, value) {
      filter.attribute = value;
      this.forceUpdate();
      this.props.onChange({ expression: this._generateFilter() });
    }
  }, {
    key: '_onChangeOperator',
    value: function _onChangeOperator(filter, evt, id, value) {
      filter.operator = value;
      this.forceUpdate();
      this.props.onChange({ expression: this._generateFilter() });
    }
  }, {
    key: '_onChangeValue',
    value: function _onChangeValue(filter, evt, value) {
      filter.value = value;
      this.forceUpdate();
      this.props.onChange({ expression: this._generateFilter() });
    }
  }, {
    key: '_isEqualFilter',
    value: function _isEqualFilter(filterA, filterB) {
      return filterA.attribute === filterB.attribute && filterA.operator === filterB.operator && filterA.value === filterB.value;
    }
  }, {
    key: '_onChangeLogical',
    value: function _onChangeLogical(evt, id, value) {
      var me = this;
      this.setState({
        logical: value
      }, function () {
        me.props.onChange({ expression: me._generateFilter() });
      });
    }
  }, {
    key: '_onDelete',
    value: function _onDelete(filter) {
      var idx;
      for (var i = 0, ii = this.state.filters.length; i < ii; i++) {
        if (this._isEqualFilter(this.state.filters[i], filter)) {
          idx = i;
          break;
        }
      }
      if (idx > -1) {
        this.state.filters.splice(idx, 1);
        this.forceUpdate();
        this.props.onChange({ expression: this._generateFilter() });
      }
    }
  }, {
    key: '_addNewFilter',
    value: function _addNewFilter() {
      this.state.filters.push({});
      this.forceUpdate();
    }
  }, {
    key: 'render',
    value: function render() {
      var listStyle = {
        padding: '0px 16px',
        marginLeft: 0
      };
      var attributeItems = [];
      var i, ii;
      for (i = 0, ii = this.props.attributes.length; i < ii; ++i) {
        var attribute = this.props.attributes[i];
        attributeItems.push(_react2.default.createElement(_MenuItem2.default, { key: i + 1, value: attribute, primaryText: attribute }));
      }
      var operatorItems = [];
      for (i = 0, ii = operators.length; i < ii; ++i) {
        operatorItems.push(_react2.default.createElement(_MenuItem2.default, { key: i, value: operators[i], primaryText: operators[i] }));
      }
      var filterItems = [];
      this.state.filters.forEach(function (filter, idx) {
        filterItems.push(_react2.default.createElement(
          _List.ListItem,
          { key: idx, innerDivStyle: listStyle, rightIcon: _react2.default.createElement(_delete2.default, { onTouchTap: this._onDelete.bind(this, filter), color: _colors.red500 }) },
          _react2.default.createElement(
            _SelectField2.default,
            { style: { width: '40%', marginRight: '10px', verticalAlign: 'bottom' }, value: filter.attribute, onChange: this._onChangeProperty.bind(this, filter) },
            attributeItems
          ),
          _react2.default.createElement(
            _SelectField2.default,
            { style: { width: '10%', marginRight: '10px', verticalAlign: 'bottom' }, value: filter.operator, onChange: this._onChangeOperator.bind(this, filter) },
            operatorItems
          ),
          _react2.default.createElement(_TextField2.default, { style: { width: '40%' }, name: 'filter-value-' + idx, defaultValue: filter.value, onChange: this._onChangeValue.bind(this, filter) })
        ));
      }, this);
      var logicalItems = [];
      logical.forEach(function (logicalItem, idx) {
        logicalItems.push(_react2.default.createElement(_MenuItem2.default, { key: idx, value: logicalItem.value, primaryText: logicalItem.text }));
      });
      var formatMessage = this.props.intl.formatMessage;
      // TODO multiple rows

      return _react2.default.createElement(
        _Paper2.default,
        { style: this.props.style, className: 'style-contentContainer', zDepth: 0 },
        _react2.default.createElement(
          _Subheader2.default,
          { className: 'style-listHeader' },
          formatMessage(messages.filterlabel)
        ),
        _react2.default.createElement(
          _List.List,
          null,
          _react2.default.createElement(
            _List.ListItem,
            null,
            _react2.default.createElement(
              _SelectField2.default,
              { value: this.state.logical, onChange: this._onChangeLogical.bind(this) },
              logicalItems
            )
          ),
          filterItems
        ),
        _react2.default.createElement(
          _Toolbar.ToolbarGroup,
          { style: { width: '100%', justifyContent: 'flex-end' } },
          _react2.default.createElement(_Button2.default, { buttonType: 'Flat', label: formatMessage(messages.addfilter), onTouchTap: this._addNewFilter.bind(this) })
        )
      );
    }
  }]);

  return FilterEditor;
}(_react2.default.PureComponent), _class.propTypes = {
  /**
   * List of attributes.
   */
  attributes: _react2.default.PropTypes.array.isRequired,
  /**
   * Callback that is called when a change is made.
   */
  onChange: _react2.default.PropTypes.func.isRequired,
  /**
   * Initial expression.
   */
  initialExpression: _react2.default.PropTypes.array,
  /**
   * Css class name to apply on the root element of this component.
   */
  className: _react2.default.PropTypes.string,
  /**
   * Style config.
   */
  style: _react2.default.PropTypes.object,
  /**
   * @ignore
   */
  intl: _reactIntl.intlShape.isRequired
}, _class.contextTypes = {
  muiTheme: _react2.default.PropTypes.object
}, _class.childContextTypes = {
  muiTheme: _react2.default.PropTypes.object.isRequired
}, _class.defaultProps = {
  initialExpression: null
}, _temp);
exports.default = (0, _reactIntl.injectIntl)(FilterEditor);