'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                    * Licensed under the Apache License, Version 2.0 (the "License").
                    * You may not use this file except in compliance with the License.
                    * You may obtain a copy of the License at
                    * http://www.apache.org/licenses/LICENSE-2.0
                    * Unless required by applicable law or agreed to in writing, software
                    * distributed under the License is distributed on an "AS IS" BASIS,
                    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    * See the License for the specific language governing permissions and limitations under the License.
                    */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _openlayers = require('openlayers');

var _openlayers2 = _interopRequireDefault(_openlayers);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _List = require('material-ui/List');

var _getMuiTheme = require('material-ui/styles/getMuiTheme');

var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);

var _ArcGISRestService = require('../services/ArcGISRestService');

var _ArcGISRestService2 = _interopRequireDefault(_ArcGISRestService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Legend component for layers with an ArcGISRest source (tiled or untiled).
 *
 * ```xml
 * <ArcGISRestLegend className='legend-list-img' layer={layer} />
 * ```
 */
var ArcGISRestLegend = (_temp = _class = function (_React$PureComponent) {
  _inherits(ArcGISRestLegend, _React$PureComponent);

  function ArcGISRestLegend(props, context) {
    _classCallCheck(this, ArcGISRestLegend);

    var _this = _possibleConstructorReturn(this, (ArcGISRestLegend.__proto__ || Object.getPrototypeOf(ArcGISRestLegend)).call(this, props));

    _this.state = {
      muiTheme: context.muiTheme || (0, _getMuiTheme2.default)()
    };
    return _this;
  }

  _createClass(ArcGISRestLegend, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var layer = this.props.layer;
      var source = layer.getSource();
      var me = this;
      _ArcGISRestService2.default.getLegend(source, function (jsonData) {
        if (me._unmounted !== true) {
          me.setState({ legendInfo: jsonData });
        }
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._unmounted = true;
    }
  }, {
    key: 'render',
    value: function render() {
      var markup = [];
      if (this.state.legendInfo) {
        var id = this.props.layer.get('name');
        var layers = this.state.legendInfo.layers;
        for (var i = 0, ii = layers.length; i < ii; ++i) {
          if (String(layers[i].layerId) === id) {
            for (var j = 0, jj = layers[i].legend.length; j < jj; ++j) {
              var label = layers[i].legend[j].label;
              markup.push(_react2.default.createElement(_List.ListItem, { disabled: true, key: id + '-' + j, primaryText: label, leftIcon: _react2.default.createElement('img', { style: { width: 'auto', height: 'auto' }, src: 'data:' + layers[i].legend[j].contentType + ';base64,' + layers[i].legend[j].imageData }) }));
            }
            break;
          }
        }
      }
      return _react2.default.createElement(
        'div',
        { style: this.props.style, className: (0, _classnames2.default)('sdk-component wms-legend', this.props.className) },
        markup
      );
    }
  }]);

  return ArcGISRestLegend;
}(_react2.default.PureComponent), _class.propTypes = {
  /**
   * The layer that has a WMS source.
   */
  layer: _react2.default.PropTypes.instanceOf(_openlayers2.default.layer.Layer).isRequired,
  /**
   * Style config.
   */
  style: _react2.default.PropTypes.object,
  /**
   * Css class name to apply on the root element of this component.
   */
  className: _react2.default.PropTypes.string
}, _class.contextTypes = {
  muiTheme: _react2.default.PropTypes.object
}, _temp);
exports.default = ArcGISRestLegend;