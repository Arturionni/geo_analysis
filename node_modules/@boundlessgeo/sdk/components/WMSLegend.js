'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /*
                    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com
                    * Licensed under the Apache License, Version 2.0 (the "License").
                    * You may not use this file except in compliance with the License.
                    * You may obtain a copy of the License at
                    * http://www.apache.org/licenses/LICENSE-2.0
                    * Unless required by applicable law or agreed to in writing, software
                    * distributed under the License is distributed on an "AS IS" BASIS,
                    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    * See the License for the specific language governing permissions and limitations under the License.
                    */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _openlayers = require('openlayers');

var _openlayers2 = _interopRequireDefault(_openlayers);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _getMuiTheme = require('material-ui/styles/getMuiTheme');

var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);

var _urlParse = require('url-parse');

var _urlParse2 = _interopRequireDefault(_urlParse);

var _AppDispatcher = require('../dispatchers/AppDispatcher');

var _AppDispatcher2 = _interopRequireDefault(_AppDispatcher);

var _LayerConstants = require('../constants/LayerConstants');

var _LayerConstants2 = _interopRequireDefault(_LayerConstants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Legend component for layers with a WMS source (tiled or untiled).
 *
 * ```xml
 * <WMSLegend  className='legend-list-img' layer={layer} />
 * ```
 */
var WMSLegend = (_temp = _class = function (_React$PureComponent) {
  _inherits(WMSLegend, _React$PureComponent);

  function WMSLegend(props, context) {
    _classCallCheck(this, WMSLegend);

    var _this = _possibleConstructorReturn(this, (WMSLegend.__proto__ || Object.getPrototypeOf(WMSLegend)).call(this, props));

    _this.state = {
      salt: Math.random(),
      dynamic: false,
      muiTheme: context.muiTheme || (0, _getMuiTheme2.default)()
    };
    return _this;
  }

  _createClass(WMSLegend, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var me = this;
      this._dispatchToken = _AppDispatcher2.default.register(function (payload) {
        var action = payload.action;
        switch (action.type) {
          case _LayerConstants2.default.STYLE_LAYER:
            me.setState({ dynamic: true, salt: Math.random() });
            break;
          default:
            break;
        }
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _AppDispatcher2.default.unregister(this._dispatchToken);
    }
  }, {
    key: 'render',
    value: function render() {
      var layer = this.props.layer;
      var source = layer.getSource();
      var params = source.getParams();
      var wmsUrl = source.getUrls()[0];
      var url = new _urlParse2.default(wmsUrl);
      var textColor = this.state.muiTheme.rawTheme.palette.textColor;
      var options = 'fontColor:' + _util2.default.rgbToHex(textColor).replace('#', '0x') + ';';
      for (var key in this.props.options) {
        options += key + ':' + this.props.options[key] + ';';
      }
      options = options.slice(0, -1);
      // TODO split up LAYERS param if needed
      var query = {
        service: 'WMS',
        request: 'GetLegendGraphic',
        transparent: true,
        format: this.props.format,
        height: this.props.height,
        width: this.props.width,
        legend_options: options,
        layer: params.LAYERS,
        '_olSalt': this.state.salt,
        style: params.STYLES ? params.STYLES : '',
        version: params.VERSION || '1.1.1'
      };
      if (params.SLD_BODY) {
        query.sld_body = params.SLD_BODY;
      }
      url.set('query', query);
      // proxy the legend graphic
      if (typeof source.opt_proxy !== 'undefined' && typeof source.use_proxy !== 'undefined' && source.use_proxy === true) {
        url = _util2.default.getProxiedUrl(url, source.opt_proxy);
      }
      var legendUrl = !this.state.dynamic && params.STYLES === undefined && params.SLD_BODY === undefined && layer.get('legendUrl') ? layer.get('legendUrl') : url.toString();
      return _react2.default.createElement('img', { style: this.props.style, className: (0, _classnames2.default)('sdk-component wms-legend', this.props.className), src: legendUrl });
    }
  }]);

  return WMSLegend;
}(_react2.default.PureComponent), _class.propTypes = {
  /**
   * The layer that has a WMS source.
   */
  layer: _react2.default.PropTypes.instanceOf(_openlayers2.default.layer.Layer).isRequired,
  /**
   * The height in pixels of the WMS GetLegendGraphic call.
   */
  height: _react2.default.PropTypes.number,
  /**
   * The width in pixels of the WMS GetLegendGraphic call.
   */
  width: _react2.default.PropTypes.number,
  /**
   * Options to send as LEGEND_OPTIONS parameter.
   */
  options: _react2.default.PropTypes.object,
  /**
   * Css class name to apply on the root element of this component.
   */
  className: _react2.default.PropTypes.string,
  /**
   * Style config.
   */
  style: _react2.default.PropTypes.object,
  /**
   * The format to use for the WMS GetLegendGraphic call.
   */
  format: _react2.default.PropTypes.string
}, _class.contextTypes = {
  muiTheme: _react2.default.PropTypes.object
}, _class.defaultProps = {
  height: 20,
  width: 20,
  options: {
    forceLabels: 'on',
    fontAntiAliasing: true,
    fontSize: 11,
    fontName: 'Arial'
  },
  format: 'image/png'
}, _temp);
exports.default = WMSLegend;