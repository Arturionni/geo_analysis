'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

Object.defineProperty(exports, "__esModule", {
	value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Route = exports.Route = (function () {
	function Route() {
		var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

		_classCallCheck(this, Route);

		this.path = opts.path || '/';
		this.hostname = opts.hostname || null;
		this.upstream = opts.upstream;

		if (opts.method) {
			this.methods = [opts.method.toLowerCase()];
		} else {
			this.methods = (opts.methods || ['get', 'post', 'put', 'delete', 'patch']).map(function (m) {
				return m.toLowerCase();
			});
		}
	}

	_createClass(Route, [{
		key: 'matches',
		value: function matches(req) {
			// Check for hostname match
			if (req.headers && this.hostname && req.headers.hostname !== this.hostname) {
				return false;
			}
			// Do other checks??

			// All matched, move along
			return true;
		}
	}, {
		key: 'handle',
		value: function handle(req, res, next) {
			this.upstream && this.upstream.handle(req, res, next);
		}
	}]);

	return Route;
})();